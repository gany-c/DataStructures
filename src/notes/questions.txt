------------------- Fitbit April 2016-----------

1. SAME AS APPLE:-
 Given a certain number of nodes connected by a linear bus, such that each node has a node on left and right; 
Implement a method that counts/prints the total number of nodes in the system. methods given are 

boolean isLeftMost(); 
boolean isRightMost(); 
sendLeft(someMessage); 
sendRight(someMessage);
to be implemented, 
main()/ Constructor, 
receiveLeft(Message m), 
receiveRight(Message m)

-- If you have state inside the class, how will you deal with both messages arriving at the node at the same time?
-- How will you deal with a one node topology?
-- Java: Can constructors invoke instance methods or static methods only?
-- Can instance variables be assigned the results of instance methods directly in the declaration?
-- What happens when a class is instantiated?

2. Merge 2 sorted arrays? What happens when one array is longer?
-- the index and the array length, < vs <=

3. A binary tree - can have COMMON-VALUE-SUBTREES or CST, 
-- Each leaf is a CST
-- 3
  / \
  3  3
  The above is a CST. there are 3 CSTs in that tree
 -- Write a function to count the number of CSTs in a tree. 

---------------------Kuppusami-----------------

1. Find the majority element in an array i.e. at least n+1/2 times it should appear
2. find the number of ways in which n elements can be arranged in a BST.
3. Given 2 sorted arrays, find the median number of the combined, - merge without copy


-------------------- Apple Mar 15 2016---------------

1. Given a blocking write method, how will you implement a non blocking wrapper
1.1. Instead of returning the future, you can return a UUID and store the future in an internal map.
1.2. other methods to be written are getStatus,abandon write.

2. Design the analytics pipeline for an extremely popular mobile gaming system.
2.1. Will you use Cassandra or Hive? why?
2.2. In the cassandra primary key, 
what are the pros and cons of putting a field as part of a composite partition key or making it a clustering key?
2.2.3 What are the advantages or disadvantages of having 1 row per partition.
2.4. In Cassandra, 
--Primary key determines the node on which the data is placed, i.e PK is hashed to token ranges
--Clustering key determines the record placement within the partition.
--The partitions within a node? Are they sorted in some order? or can they found just by the hash of the partition key?
http://www.datastax.com/dev/blog/basic-rules-of-cassandra-data-modeling
2.3. When you have a service which  is both a client and server,
Is there any advantage of being non-blocking in the outgoing requests when, you are blocking w.r.t to inbound?
-- I said the thread pools can be used better, i.e. more threads will be freed
--- and now to think, if the incoming is non blocking, why does it matter to the client what server does?
--- Think through this in terms of Question 1
4. How do semaphores work?
5.Lambda, streams and filtering:-
--Given a Map of Strings as keys and Sets as values
-- How will you use Streams and Lambdas to get a map of String Keys and integer counts of set size
-- Which method will you invoke on the stream? (not filter)

-- N way merge sort was asked twice.
-- In general, Apple emphasizes more on Java than algorithms

6. Some crazy combinatronics problem
--- 3 numbers should sum up to 1.
--- their values should be between 0 and 1
--- they should be multiples of an input step size
--- Find all such combinations

-------------------- Apple Mar 7 2016---------------

In Cassandra, How would you model the schema/backend of a Top Viewed items application

---------------------Settu Kadai :P :) ----------------------------------
1. Find a the existence of a string in a matrix of characters
2. given 2 lists of tuples/periods sorted by their starting date,
merge them together such that the overlapping ranges are sorted. - Easy
3. Design an auctions website; what are the java objects?

--------------------------------------------------------------------------

MATHEMATICS - GIVEN A CERTAIN AMOUNT AND COIN VALUES, FIND ALL COMBINATIONS	 
MATHEMATICS - RAMANUJAN'S PARTITIONS :)

-------------------- LINKED LIST---------------

 -- find the middle element.
 -- check for cycles
 
 3. INSERT INTO A ORDERED LINKED LIST WHERE THERE IS NO HEADER NODE, BUT A HEADER POINTER IS AVAILABLE
 
 --- First check if the header pointer is null or if the node to which it points to is strictly greater than the input
 ---- If so, insert right there i.e. set header as the input's next and make the header pointer point to input.
 
 --- if not, set a pointer called curr, it starts at the node pointed to by head
 ---- Keep moving forward, until the node pointed by curr is null or is strictly greater
 ---- insert the new node, between curr and its next.

-------------------- RIVER SEA 2016---------------

- You're given a text file of white space delimited words
- Words may be separated by one or more white spaces
- You're asked to compute the following:

- The total number of words in the file
- The frequency of each word
- The top-K most frequently occurring words in the file

- Caveat: You may not use String.split(), Pattern, StringTokenizer, StringBuffer, StringBuilder, etc to split a line of text, i.e., parse the text on your own.

CORE IS IMPLEMENTING THE TOKENIZER - USE 2 INDEXES, INSTEAD OF GOING ON ADDING TO A TEMP TOKEN.


------------------------- linkedin 2016 -----------------------

1. How will you sell Linkedin's premium membership on Walmart? 
What would be the interfaces? 
What requirements, or specifications will you reauest?

2. Why not have a persistent layer at IRO itself? 
How will you fill up this DB?
When will you access or refresh it, if the RTs are the source of truth?

2.5. Micro-Services cause a lot of chatter and network latency; why use that model? why not put everything together?
-- If each functionality needs to be scaled independently, why not put everything together and scale up the number of nodes
-- I guess the reason could be that the microservices could have additional clients besides IRO i.e. your aggregator.

-- If there is another level of persistence at the aggregator, how will you sync it with the RTs or Micro Service DBs


3. Given two sorted lists, with no internal duplicates 
- Create their intersection and union, both should be sorted
- If you use a TreeSet, what will be the complexity? 
- What is a TreeSet's retrieval complexity, 
- What is a TreeSet's inner structure.
- This can be done using merge sort 
- just add a check for equality and update the intersection array, instead of the merge array
- the merge array will form the union array.
- If there are a million words, how will you speed up the process?
- If you use multithreading and split the lists into zones, how will you determine where to split 

4. Given the X and Y coordinates of a set of points, find the maximum number of points which can be fitted on a line
http://www.careercup.com/question?id=1843671

- This can be done in n^2 complexity.
- Solve the problem for each point taking that point as a "must pass" for the line
--- Maintain a map of slope - count of points, return the max from the map
- Get the max of the results from above.

5. Incrementally design a game system

1. Simple Hangman game for 1000 users; no persistence
-- put the session in HttpSession
2. What if you want to see your cummulative score
-- persistence layer, score table
3.  What if you want to see top ranked players in another page
-- Kafka not needed here for offline rank calculation
-- A simple api on the score table, with order by
4.  How would you calculate the user's rank?
-- it will not be in the top 100 or so - calculating rank will be expensive
-- how do you approximate the rank? correlate rank and score and periodically correct the rank?
5. Now, what if you have to load balance this system?
-- Will you create a new table for rank apart from score and constantly update this?
-- What will be the model of the table in nosql
6. Now, what if you want to add friends, and friends rank to the screen?
-- Will you have a friends to friends table and invoke this as a separate ajax API?
-- Will you have a single denormalized table? of friend ranks?
7. How will you ensure that people don't see the same games/ words again and again?
-- Use a random number generator?
-- If there are 50,000 words and 10,000 users at a time; How often will a user see repetitions

Solution

-- Constraint = Joins not allowed, secondary indexes aren't allowed
-- advantage = Create as many tables as you want.

-- Top scorer and Rank table
--- Create 2 tables - <Player(pk), Score> and <Score, Player> (combined pk)
--- Whenever a player gets a new score, update in the first table
---- take the old score and player id combo and update the new table.
---- Top scorers = get 100 records from the result set in the second table
---- Rank of a player = in the second table, select count(*) from "second-table" where score > my-score
---- Friends and friends rank - Keep a <Player,player> mapping table with player 1 as primary key
------- Get all such players i.e. friends and get their ranks


------------------------Apple Oct 2015----------------------------------------------

1. Given a certain number of nodes connected by a linear bus, such that each node has a node on left and right; 
Implement a method that counts the total number of nodes in the system. methods given are 

boolean isLeftMost(); boolean isRightMost(); sendLeft(someMessage); sendRight(someMessage);

to be implemented

main(), receiveLeft(Message m), receiveRight(Message m)

The last two methods are callbacks. 
The same methods should run on every code, and should run when all of the nodes start at the same time

2. Given 2 sets of numbers, how will you find the intersection
-- HashSet approach is what you would use, what if the hashset doesn't fit
--- You may external sort the number lists and then do the check; max - min range of one set can be of help here.

3. Given a huge string that represents a book; write a boolean sentence that returns true if any 2 sentences share a word set
--- This is a simpler variation of the intersection question, in that you just need to find one 
--- How will you do it the hashset doesn't fit.. has to be brute force
--- What if a few false positives are allowed, then how would you do it? Hash a sentence and store in a BloomFilter
--- How will you make a BloomFilter more precise? Increase the size of the underlying byte array.
---- What if the file is distributed - Build bloomfilters on the fly on each node 
and apart from the local check pass messages for checks on other nodes. Add these remote queries to the local bloom filter also.
--- To reduce message passing, you can add batch the messages in terms of 10.

4. How will you store a file of key-value pairs on disks? 

integer - key size
integer -value size
key bytes,
value bytes 
checksum

several of the above in a file and then a file level checksum.

5. How will you create a PeekIterator, which is a wrapper around a regular iterator.

Apart from the hasNext() and next() method you have to implement a peek() method.
You use a temp variable for the method you pulled out - good approach,
but don't use temp==null as a check. That would fail if the iterator itself contains null.

6. How do you speed up external sort with multi core
-- can't do in the merge phase, but you can in the first sort phase.

7. How do you sort numbers across rings? How do you agree on the token ranges? You can use sampling 

------------------------------FB 2015-------------------

1. Given a revision system like git, it has a list of checkins / revisions and after some revision things went bad. You are given a function isGood(revision), you have to find out which revision was the source - Did this, was a simple binary search.

2. Given a list of positive and negative integers, push all the zeros to the end - Do this in linear time, without using any additional storage - Got this, but didn't catch edge cases - end already has more that one consecutive zero, adjustment for this pushes the pointer out, and order of conditions while doing these two.

3. I'm given  the prices of a stock for 1 year for each day. Find the best pair of days to buy and sell  - do this in Linear time : totally screwed this up, still don't know the answer.

4. next ...find all permutations of a string ...for e.g. abc has 6 per which aew
abc -> acb 
bac-> bca
cab-> cba




---------------------- Geometry, points and XY coordinates------------------

1. Given n points, find the Closest pair

--- n^2 checks
Sort by x axis and find the closest neighbor for each point
--- reduce the number of checks by 
1. Don't traverse beyond, the shortest distance already found for that point
2. For a given point, while traversing along the X axis and measuring distances

-- once one neighbor is found, the remaining nodes have to have lower Y separation than that neighbor.
 

------------------------geeks for geeks----------------

5. http://www.geeksforgeeks.org/find-k-closest-elements-given-value/ => Done - ListUtil
6. http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/ => Done - Rank Util
7. http://geeksquiz.com/given-sorted-array-number-x-find-pair-array-whose-sum-closest-x/

8. http://www.geeksforgeeks.org/greedy-algorithms-set-2-kruskals-minimum-spanning-tree-mst/ => Done - Kruskal
9. http://www.geeksforgeeks.org/greedy-algorithms-set-3-huffman-coding/
10. http://www.geeksforgeeks.org/greedy-algorithms-set-6-dijkstras-shortest-path-algorithm/ => Done in Algos project.

11. http://www.geeksforgeeks.org/anagram-substring-search-search-permutations/ - Check WordUtils
12. http://www.geeksforgeeks.org/dynamic-programming-set-4-longest-common-subsequence/
13. http://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/
14. http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/

15. http://www.geeksforgeeks.org/backtracking-set-1-the-knights-tour-problem/
16. http://www.geeksforgeeks.org/backtracking-set-3-n-queen-problem/ => Done - ChessBoardUtil
17. http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/
18. http://www.geeksforgeeks.org/backttracking-set-4-subset-sum/

19. http://www.geeksforgeeks.org/largest-sum-contiguous-subarray/

--------------------Career Cup -----------------------
http://www.careercup.com/question?id=5389627422670848 - Isomorphic strings

create a map of character to separtor-index-separater
combine the values and compre

http://www.careercup.com/question?id=15489754 - binary search on a rotated sorted array

3 binary searches - one to find the break point, then one for each zone.

http://www.careercup.com/question?id=5685440222855168

Reverse polish notation, use both stack and string traversal

-- traverse the string, character by character
-- keep pushing operands into stack, 
if you see an operator, pop 2 operands, do the operation. Push back into the stack 


--------------------Illumina --------------------------

1. Given a set of range tuples [1,5] [2, 7] [8,13]
return a set of tuples such that the overlapping ranges are merged. http://www.geeksforgeeks.org/merging-intervals/
2. Difference between PUT and POST - caching
3. Javascript - This and no return in a constructor.
4. external sort for top 1k items from 1 million integers, which won't fit into memory.
5. A class which has an add method and display last 10 method, implement it without threading issues.
6. what is new about java 8
7. based on 1, find the duration with max overlap

---------------------Elementum--------------------------

1. Given a list of Strings and 2 words in the List, find the closest separation between those two words 
i.e. they may appear multiple times 

Ans:- linear is possible, as you traverse, compare the 2 latest occurences of w1 and w2, 
compare that separation with saved min



RabbitMq - protocol?
Kafka - how do you implement guarantee delivery
Cassandra - sorting by keys is fine, but how does the translation from key to file address actually happen. Will aaab really physically sit after aaaa
Apple's queue in the cloud for pushing messages to phones - Apple APNS, Android GCMß


---------------Uber--------------------

/* 

message = "Lets say we are given this very long message. 
We have decided to split this message up ourselves into num_chars chunks. 
Additionally we want to append helpful information at the end of the message telling the client what part of the message this is, so (1/2), (2/2) etc. 
Finally, we need to make sure that we do not break up words when splitting the message. Good luck!"

num_chars = 140
 function (mess, num_chars)
   return [message1, message2]
   
 */
 
 ------------ CloudEra --------------------
Find the largest island
 
2 3 0 0 1

0 4 0 5 2

0 0 0 0 6
------------------
 
 
 
 
