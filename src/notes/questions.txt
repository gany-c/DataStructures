------------------ Design questions--------------

http://blog.gainlo.co/index.php/category/system-design-interview-questions/

http://blog.gainlo.co/index.php/2016/03/08/system-design-interview-question-create-tinyurl-system/
http://blog.gainlo.co/index.php/2016/03/01/system-design-interview-question-create-a-photo-sharing-app/
http://blog.gainlo.co/index.php/2016/02/17/system-design-interview-question-how-to-design-twitter-part-1/
http://blog.gainlo.co/index.php/2016/02/24/system-design-interview-question-how-to-design-twitter-part-2/
http://blog.gainlo.co/index.php/2016/09/30/uber-interview-question-delimiter-matching/ - not design
http://blog.gainlo.co/index.php/2016/06/14/design-a-key-value-store-part-i/
http://blog.gainlo.co/index.php/2016/06/21/design-key-value-store-part-ii/

------------------ Jatin Java -----------------

1. Make a map immutable
2. Implement a concurrentHashMap
3. Difference between immutable and unmodifiable collection
4. ConcurrentHashMap vs Synchronized Map
5. ClassNotFoundException vs NoClassDefFoundError
6. Immutability and Concurrency


-------------------Evernote----------------

1. THINGKING TRAP:- Binary search can be deceptive at times, check the mechanism of sorting before saying "Binary search"
---  ids can be inserted in an array by order of time - They are sorted by time, by can't be searched in a binary way.

2. Design a messenger or chat service
--- You have to show the previous chats, so have a file person-person-File, 
----- load the file or the file's tail -100
--- You will need a directory of user ids, indexed by name, email etc
--- When the connection is made, you create a file
--- How do you transmit User name and Password securely? HTTPS and SSL
https://www.youtube.com/watch?v=JCvPnwpWVUQ
---What happens when you the login is successful - HTTP Session, cookie?
----- what do you get back? what is in the cookie
----- how is that cookie used afterwards i.e. in the session?

--------------------Kuppuswamy--------------------------------------

1. Flatten a nested iterator; how would you handle cycles?
2. The dictionary + sentence questions - what is the complexity? n square or exponential
3. Url shortener - What would be the size of entries? total size of the DB?

---------------------Twitter-----------------------------------------

1. Given a runnable and a microsecond delay, write a method that will execute the runnable after the delay.
2. Who throws the InterruptedException on a sleeping thread and why?
http://www.ibm.com/developerworks/library/j-jtp05236/
3. http://tutorials.jenkov.com/java-util-concurrent/scheduledexecutorservice.html Check out this class

----------------------Microsoft------------------------------------------

1. Cassandra doesn't offer immediate consistency: he claims
2. what was the read count + write count > Replication factor?

https://docs.datastax.com/en/cassandra/2.1/cassandra/dml/dml_config_consistency_c.html

If consistency is a top priority, you can ensure that a read always reflects the most recent write by using the following formula:
(nodes_written + nodes_read) > replication_factor 


3. Don't give the Etrade to Bank example - That is because of FCC :) Can be done in Milliseconds
4. How do you build a Database with immediate consistency and scalability
---- use an RDBMS and partition it e.g. by user names
---- Split the analytics part away from the OLTP, i.e. the OLAP from OLTP
----- Use noSql for OLAP.


--------------------------------------------------------------------------
SHEKHAR RAJ:- ARRAY:-

1. Given an array such that the values are always lesser than size and greater than -1
---- rearrange the array such that a[i] = a[a[i]]
---- Do this such that, no secondary array is used.
---- ANSWER: THINK ABOUT HOW YOU WILL DO IT WITH THE SECONDARY STORAGE, THEN THINK WHY YOU NEED IT, 
		THEN FIND THE ALTERNATIVE.

----------------- Microsoft June 2016--------------------------------

1. Given a simple lock, implement a read write lock, i.e. allows several reads
---- Very simple :) uses a counter, while loop along with the one loop
---- Single statement read only check on a synchronized variable is of no use. 
---- Race conditions can still occur with these.


2. Model an elevator system, (Yes again :)) What are the classes?

3. Bucket sort? When to use it? i.e. Range of values is much smaller than the number of values.
---- Use another smaller array of counts of values, the indexes represent the values.
---- What if there is meta data associated with the values? i.e.  unique records
---- How will you do it without putting a list or stack into each value of the new small count array.


4. Design:- Given disk speed, file size, what will be request time? How will cache Help? 
How to implement LRU cache?

http://www.geeksforgeeks.org/implement-lru-cache/

We use two data structures to implement an LRU Cache.

Queue which is implemented using a doubly linked list. The maximum size of the queue will be equal to the total number of frames available (cache size).The most recently used pages will be near front end and least recently pages will be near rear end.
A Hash with page number as key and address of the corresponding queue node as value.
When a page is referenced, the required page may be in the memory. If it is in the memory, we need to detach the node of the list and bring it to the front of the queue.
If the required page is not in the memory, we bring that in memory. In simple words, we add a new node to the front of the queue and update the corresponding node address in the hash. If the queue is full, i.e. all the frames are full, we remove a node from the rear of queue, and add the new node to the front of queue.

Note: Initially no page is in the memory.

SUBRAMANI'S QUESTIONS:

1. Print the Top view of a binary tree, i.e. the outer most outline of a tree
---- Mistake made: didn't consider the zig zaging of the outer most branch.

2. Longest common sub sequence? Classical Dynamic programming problem.
----http://www.geeksforgeeks.org/dynamic-programming-set-4-longest-common-subsequence/

3. How do you model or implement Asynchronous I/O?
--- Client's perspective has a callback method.
--- 2 possible models are the polling model:
------- i.e. the client get's token after the first request
------- then the client keeps polling the server with the token for the final response.
----- The client gives the server a callback url, the server calls it when it is done.

4. Sometimes, just say "I'll measure or I'll use instrumentation" :)

5.  HASHMAP:- implement as array of linkedlists; what will be the structure of the node in the list? 
Value only? key and value? why do you need the key?


----------------- FB Interview workshop Questions --------------------

1. Given a Fibonacci binary tree - i.e. 2 children are values that are added to get the Fib number
--- What will be the height of the tree if the Number at the root is N (not Log N)
--- What will be the number of nodes?

2. Given a set of birth and death years, find the years which have maximum population?
3. Given 2 sorted arrays, find the common numbers
4. What is the Space complexity in recursion? - The stack's size and memory
5. What is the above when memoization is used.
6. Find all numbers that can be expressed as the sum of cubes of 2 different numbers in 2 different ways.
a^3 + b ^3 = c^3 + d^3; a, b, c and d are less than 1000 and greater than 0
7. Find the largest sum sub matrix.
8. Find all sub sets of a set
9. Find all permutations of a smaller string in a bigger string. What if the same string as small and big
10. Ransom note problem: http://algorithmsandme.in/2014/03/strings-ransom-note-from-magazine/
11. Tries - https://www.youtube.com/watch?v=NKr6gWcXkIM, https://www.youtube.com/watch?v=AXjmTQ8LEoI
12. Where there is backtracking, use recursion


Design questions:-  http://highscalability.com/

1. Design tiny url
2. Design best seller on Amazon
3. Design Twitter


---------------- Interviewing resources:--------------------

1. https://www.careercup.com/page?pid=distributed-computing-interview-questions&sort=comments
2. http://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/
3. Testing elevator algorithm in Javascript http://play.elevatorsaga.com/


------------------- Box April 2016 -------------

1. Same as fitbit, unival tree -implement isUnival, countNumUnival
2. Elevator algorithm
--- Multiple elevators, how do we decide which one serves a request
--- Enum state- UP, Down, waiting to determine direction
--- Boolean array of floors length, to represent the requests
--- Elevators are thread objects, which share above array, plus another state of each elevator 
--- Run method() - Calls Serve(State, currFloor)
----- if waiting, go to nearest request
----- if going up, go to nearest up request
----- if going down, goto nearest down request.



3. Distributed Cache design
--- How do you prevent different load balanced nodes from overwriting values in the Cache?
----- Use DB timestamp and accept only the latest value for a write
----- Where does the lock exist in Cache's map? DB level or Bucket level
----- How will you implement timeouts in a distributed system? 
----- Lock is acquired and not returned? e.g. How does a ZK ephemeral node handle this?
----- How are new nodes added in Cassandra?
----------How is the token range redistribution done?
----------How can this done while serving live traffic?

4. Map operation with Begin, RollBack and Commit?

-- Implement a data structure which supports
---- put(key, value), get(key), delete, count(value)
PLUS
--- Begin, Rollback, commit
--- Nested transactions are allowed
--- At any point of time, any of the operations should return the most relevant value
----- if present in the innermost, then from there, else from the next layer and so on.
----- A single commit, commits all transactions
----- A single rollback, rolls back the innermost.

Solution

--- use one map for commit and a stack of maps for the transactions
--- each begin adds a map
--- each rollback removes a map
--- each commit replays the changes from the bottom of the map


Solution 2

--- try using a map of lists where each value of the list is one layer of transaction

------------------- Fitbit April 2016-----------

1. SAME AS APPLE:-
 Given a certain number of nodes connected by a linear bus, such that each node has a node on left and right; 
Implement a method that counts/prints the total number of nodes in the system. methods given are 

boolean isLeftMost(); 
boolean isRightMost(); 
sendLeft(someMessage); 
sendRight(someMessage);
to be implemented, 
main()/ Constructor, 
receiveLeft(Message m), 
receiveRight(Message m)

-- If you have state inside the class, how will you deal with both messages arriving at the node at the same time?
-- How will you deal with a one node topology?
-- Java: Can constructors invoke instance methods or static methods only?
-- Can instance variables be assigned the results of instance methods directly in the declaration?
-- What happens when a class is instantiated?

2. Merge 2 sorted arrays? What happens when one array is longer?
-- the index and the array length, < vs <=

3. A binary tree - can have COMMON-VALUE-SUBTREES or CST, 
-- Each leaf is a CST
-- 3
  / \
  3  3
  The above is a CST. there are 3 CSTs in that tree
 -- Write a function to count the number of CSTs in a tree. 

---------------------Kuppusami-----------------

1. Find the majority element in an array i.e. at least n+1/2 times it should appear
2. find the number of ways in which n elements can be arranged in a BST.
3. Given 2 sorted arrays, find the median number of the combined, - merge without copy


-------------------- Apple Mar 15 2016---------------

1. Given a blocking write method, how will you implement a non blocking wrapper
1.1. Instead of returning the future, you can return a UUID and store the future in an internal map.
1.2. other methods to be written are getStatus,abandon write.

2. Design the analytics pipeline for an extremely popular mobile gaming system.
2.1. Will you use Cassandra or Hive? why?
2.2. In the cassandra primary key, 
what are the pros and cons of putting a field as part of a composite partition key or making it a clustering key?
2.2.3 What are the advantages or disadvantages of having 1 row per partition.
2.4. In Cassandra, 
--Primary key determines the node on which the data is placed, i.e PK is hashed to token ranges
--Clustering key determines the record placement within the partition.
--The partitions within a node? Are they sorted in some order? or can they found just by the hash of the partition key?
http://www.datastax.com/dev/blog/basic-rules-of-cassandra-data-modeling
2.3. When you have a service which  is both a client and server,
Is there any advantage of being non-blocking in the outgoing requests when, you are blocking w.r.t to inbound?
-- I said the thread pools can be used better, i.e. more threads will be freed
--- and now to think, if the incoming is non blocking, why does it matter to the client what server does?
--- Think through this in terms of Question 1
4. How do semaphores work?
5.Lambda, streams and filtering:-
--Given a Map of Strings as keys and Sets as values
-- How will you use Streams and Lambdas to get a map of String Keys and integer counts of set size
-- Which method will you invoke on the stream? (not filter)

-- N way merge sort was asked twice.
-- In general, Apple emphasizes more on Java than algorithms

6. Some crazy combinatronics problem
--- 3 numbers should sum up to 1.
--- their values should be between 0 and 1
--- they should be multiples of an input step size
--- Find all such combinations

-------------------- Apple Mar 7 2016---------------

In Cassandra, How would you model the schema/backend of a Top Viewed items application

---------------------Settu Kadai :P :) ----------------------------------
1. Find a the existence of a string in a matrix of characters
2. given 2 lists of tuples/periods sorted by their starting date,
merge them together such that the overlapping ranges are unified. - Easy
3. Design an auctions website; what are the java objects?

--------------------------------------------------------------------------

MATHEMATICS - GIVEN A CERTAIN AMOUNT AND COIN VALUES, FIND ALL COMBINATIONS	 
MATHEMATICS - RAMANUJAN'S PARTITIONS :)

-------------------- LINKED LIST---------------

 -- find the middle element.
 -- check for cycles
 -- Switch every 3rd element
 -- Need for header; what if there is an internal pointer; doubly linked?
 
 3. INSERT INTO A ORDERED LINKED LIST WHERE THERE IS NO HEADER NODE, BUT A HEADER POINTER IS AVAILABLE
 
 --- First check if the header pointer is null or if the node to which it points to is strictly greater than the input
 ---- If so, insert right there i.e. set header as the input's next and make the header pointer point to input.
 
 --- if not, set a pointer called curr, it starts at the node pointed to by head
 ---- Keep moving forward, until the node pointed by curr is null or is strictly greater
 ---- insert the new node, between curr and its next.

-------------------- RIVER SEA 2016---------------

- You're given a text file of white space delimited words
- Words may be separated by one or more white spaces
- You're asked to compute the following:

- The total number of words in the file
- The frequency of each word
- The top-K most frequently occurring words in the file

- Caveat: You may not use String.split(), Pattern, StringTokenizer, StringBuffer, StringBuilder, etc to split a line of text, i.e., parse the text on your own.

CORE IS IMPLEMENTING THE TOKENIZER - USE 2 INDEXES, INSTEAD OF GOING ON ADDING TO A TEMP TOKEN.


------------------------- linkedin 2016 -----------------------

1. How will you sell Linkedin's premium membership on Walmart? 
What would be the interfaces? 
What requirements, or specifications will you reauest?

2. Why not have a persistent layer at IRO itself? 
How will you fill up this DB?
When will you access or refresh it, if the RTs are the source of truth?

2.5. Micro-Services cause a lot of chatter and network latency; why use that model? why not put everything together?
-- If each functionality needs to be scaled independently, why not put everything together and scale up the number of nodes
-- I guess the reason could be that the microservices could have additional clients besides IRO i.e. your aggregator.

-- If there is another level of persistence at the aggregator, how will you sync it with the RTs or Micro Service DBs


3. Given two sorted lists, with no internal duplicates 
- Create their intersection and union, both should be sorted
- If you use a TreeSet, what will be the complexity? 
- What is a TreeSet's retrieval complexity, 
- What is a TreeSet's inner structure.
- This can be done using merge sort 
- just add a check for equality and update the intersection array, instead of the merge array
- the merge array will form the union array.
- If there are a million words, how will you speed up the process?
- If you use multithreading and split the lists into zones, how will you determine where to split 

4. Given the X and Y coordinates of a set of points, find the maximum number of points which can be fitted on a line
http://www.careercup.com/question?id=1843671

- This can be done in n^2 complexity.
- Solve the problem for each point taking that point as a "must pass" for the line
--- Maintain a map of slope - count of points, return the max from the map
- Get the max of the results from above.

5. Incrementally design a game system

1. Simple Hangman game for 1000 users; no persistence
-- put the session in HttpSession
2. What if you want to see your cummulative score
-- persistence layer, score table
3.  What if you want to see top ranked players in another page
-- Kafka not needed here for offline rank calculation
-- A simple api on the score table, with order by
4.  How would you calculate the user's rank?
-- it will not be in the top 100 or so - calculating rank will be expensive
-- how do you approximate the rank? correlate rank and score and periodically correct the rank?
5. Now, what if you have to load balance this system?
-- Will you create a new table for rank apart from score and constantly update this?
-- What will be the model of the table in nosql
6. Now, what if you want to add friends, and friends rank to the screen?
-- Will you have a friends to friends table and invoke this as a separate ajax API?
-- Will you have a single denormalized table? of friend ranks?
7. How will you ensure that people don't see the same games/ words again and again?
-- Use a random number generator?
-- If there are 50,000 words and 10,000 users at a time; How often will a user see repetitions

Solution

-- Constraint = Joins not allowed, secondary indexes aren't allowed
-- advantage = Create as many tables as you want.

-- Top scorer and Rank table
--- Create 2 tables - <Player(pk), Score> and <Score, Player> (combined pk)
--- Whenever a player gets a new score, update in the first table
---- take the old score and player id combo and update the new table.
---- Top scorers = get 100 records from the result set in the second table
---- Rank of a player = in the second table, select count(*) from "second-table" where score > my-score
---- Friends and friends rank - Keep a <Player,player> mapping table with player 1 as primary key
------- Get all such players i.e. friends and get their ranks


------------------------Apple Oct 2015----------------------------------------------

1. Given a certain number of nodes connected by a linear bus, such that each node has a node on left and right; 
Implement a method that counts the total number of nodes in the system. methods given are 

boolean isLeftMost(); boolean isRightMost(); sendLeft(someMessage); sendRight(someMessage);

to be implemented

main(), receiveLeft(Message m), receiveRight(Message m)

The last two methods are callbacks. 
The same methods should run on every code, and should run when all of the nodes start at the same time

2. Given 2 sets of numbers, how will you find the intersection
-- HashSet approach is what you would use, what if the hashset doesn't fit
--- You may external sort the number lists and then do the check; max - min range of one set can be of help here.

3. Given a huge string that represents a book; write a boolean sentence that returns true if any 2 sentences share a word set
--- This is a simpler variation of the intersection question, in that you just need to find one 
--- How will you do it the hashset doesn't fit.. has to be brute force
--- What if a few false positives are allowed, then how would you do it? Hash a sentence and store in a BloomFilter
--- How will you make a BloomFilter more precise? Increase the size of the underlying byte array.
---- What if the file is distributed - Build bloomfilters on the fly on each node 
and apart from the local check pass messages for checks on other nodes. Add these remote queries to the local bloom filter also.
--- To reduce message passing, you can add batch the messages in terms of 10.

4. How will you store a file of key-value pairs on disks? 

integer - key size
integer -value size
key bytes,
value bytes 
checksum

several of the above in a file and then a file level checksum.

5. How will you create a PeekIterator, which is a wrapper around a regular iterator.

Apart from the hasNext() and next() method you have to implement a peek() method.
You use a temp variable for the method you pulled out - good approach,
but don't use temp==null as a check. That would fail if the iterator itself contains null.

6. How do you speed up external sort with multi core
-- can't do in the merge phase, but you can in the first sort phase.

7. How do you sort numbers across rings? How do you agree on the token ranges? You can use sampling 

------------------------------FB 2015-------------------

1. Given a revision system like git, it has a list of checkins / revisions and after some revision things went bad. You are given a function isGood(revision), you have to find out which revision was the source - Did this, was a simple binary search.

2. Given a list of positive and negative integers, push all the zeros to the end - Do this in linear time, without using any additional storage - Got this, but didn't catch edge cases - end already has more that one consecutive zero, adjustment for this pushes the pointer out, and order of conditions while doing these two.

3. I'm given  the prices of a stock for 1 year for each day. Find the best pair of days to buy and sell  - do this in Linear time : totally screwed this up, still don't know the answer.

4. next ...find all permutations of a string ...for e.g. abc has 6 per which aew
abc -> acb 
bac-> bca
cab-> cba




---------------------- Geometry, points and XY coordinates------------------

1. Given n points, find the Closest pair

--- n^2 checks
Sort by x axis and find the closest neighbor for each point
--- reduce the number of checks by 
1. Don't traverse beyond, the shortest distance already found for that point
2. For a given point, while traversing along the X axis and measuring distances

-- once one neighbor is found, the remaining nodes have to have lower Y separation than that neighbor.
 

------------------------geeks for geeks----------------

5. http://www.geeksforgeeks.org/find-k-closest-elements-given-value/ => Done - ListUtil
6. http://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array-set-2-expected-linear-time/ => Done - Rank Util
7. http://geeksquiz.com/given-sorted-array-number-x-find-pair-array-whose-sum-closest-x/

8. http://www.geeksforgeeks.org/greedy-algorithms-set-2-kruskals-minimum-spanning-tree-mst/ => Done - Kruskal
9. http://www.geeksforgeeks.org/greedy-algorithms-set-3-huffman-coding/
10. http://www.geeksforgeeks.org/greedy-algorithms-set-6-dijkstras-shortest-path-algorithm/ => Done in Algos project.

11. http://www.geeksforgeeks.org/anagram-substring-search-search-permutations/ - Check WordUtils
12. http://www.geeksforgeeks.org/dynamic-programming-set-4-longest-common-subsequence/
13. http://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/
14. http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/

15. http://www.geeksforgeeks.org/backtracking-set-1-the-knights-tour-problem/
16. http://www.geeksforgeeks.org/backtracking-set-3-n-queen-problem/ => Done - ChessBoardUtil
17. http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/
18. http://www.geeksforgeeks.org/backttracking-set-4-subset-sum/

19. http://www.geeksforgeeks.org/largest-sum-contiguous-subarray/

--------------------Career Cup -----------------------
http://www.careercup.com/question?id=5389627422670848 - Isomorphic strings

create a map of character to separtor-index-separater
combine the values and compre

http://www.careercup.com/question?id=15489754 - binary search on a rotated sorted array

3 binary searches - one to find the break point, then one for each zone.

http://www.careercup.com/question?id=5685440222855168

Reverse polish notation, use both stack and string traversal

-- traverse the string, character by character
-- keep pushing operands into stack, 
if you see an operator, pop 2 operands, do the operation. Push back into the stack 


--------------------Illumina --------------------------

1. Given a set of range tuples [1,5] [2, 7] [8,13]
return a set of tuples such that the overlapping ranges are merged. http://www.geeksforgeeks.org/merging-intervals/
2. Difference between PUT and POST - caching
3. Javascript - This and no return in a constructor.
4. external sort for top 1k items from 1 million integers, which won't fit into memory.
5. A class which has an add method and display last 10 method, implement it without threading issues.
6. what is new about java 8
7. based on 1, find the duration with max overlap

---------------------Elementum--------------------------

1. Given a list of Strings and 2 words in the List, find the closest separation between those two words 
i.e. they may appear multiple times 

Ans:- linear is possible, as you traverse, compare the 2 latest occurences of w1 and w2, 
compare that separation with saved min



RabbitMq - protocol?
Kafka - how do you implement guarantee delivery
Cassandra - sorting by keys is fine, but how does the translation from key to file address actually happen. Will aaab really physically sit after aaaa
Apple's queue in the cloud for pushing messages to phones - Apple APNS, Android GCMß


---------------Uber--------------------

/* 

message = "Lets say we are given this very long message. 
We have decided to split this message up ourselves into num_chars chunks. 
Additionally we want to append helpful information at the end of the message telling the client what part of the message this is, so (1/2), (2/2) etc. 
Finally, we need to make sure that we do not break up words when splitting the message. Good luck!"

num_chars = 140
 function (mess, num_chars)
   return [message1, message2]
   
 */
 
 ------------ CloudEra --------------------
Find the largest island
 
2 3 0 0 1

0 4 0 5 2

0 0 0 0 6
------------------
 
 
 
 
